#include "stdafx.h"
#include "Scintilla.h"
#include "Enums.h"


using namespace boost::python;

void export_enums()
{
	/* Between the Autogenerated comments is auto generated with
	 * CreateWrapper.py.  Edit that file (and not this one)
	 * to change
	 */

	/* ++Autogenerated -------------------------------------------- */
	enum_<CaretPolicy>("CARETPOLICY")
		.value("SLOP", PYSCR_CARET_SLOP)
		.value("STRICT", PYSCR_CARET_STRICT)
		.value("JUMPS", PYSCR_CARET_JUMPS)
		.value("EVEN", PYSCR_CARET_EVEN);

	enum_<CaseVisible>("CASEVISIBLE")
		.value("MIXED", PYSCR_SC_CASE_MIXED)
		.value("UPPER", PYSCR_SC_CASE_UPPER)
		.value("LOWER", PYSCR_SC_CASE_LOWER);

	enum_<FoldFlag>("FOLDFLAG")
		.value("LINEBEFORE_EXPANDED", PYSCR_SC_FOLDFLAG_LINEBEFORE_EXPANDED)
		.value("LINEBEFORE_CONTRACTED", PYSCR_SC_FOLDFLAG_LINEBEFORE_CONTRACTED)
		.value("LINEAFTER_EXPANDED", PYSCR_SC_FOLDFLAG_LINEAFTER_EXPANDED)
		.value("LINEAFTER_CONTRACTED", PYSCR_SC_FOLDFLAG_LINEAFTER_CONTRACTED)
		.value("LEVELNUMBERS", PYSCR_SC_FOLDFLAG_LEVELNUMBERS);

	enum_<CaretStyle>("CARETSTYLE")
		.value("INVISIBLE", PYSCR_CARETSTYLE_INVISIBLE)
		.value("LINE", PYSCR_CARETSTYLE_LINE)
		.value("BLOCK", PYSCR_CARETSTYLE_BLOCK);

	enum_<Status>("STATUS")
		.value("OK", PYSCR_SC_STATUS_OK)
		.value("FAILURE", PYSCR_SC_STATUS_FAILURE)
		.value("BADALLOC", PYSCR_SC_STATUS_BADALLOC);

	enum_<WrapVisualLocation>("WRAPVISUALLOCATION")
		.value("DEFAULT", PYSCR_SC_WRAPVISUALFLAGLOC_DEFAULT)
		.value("END_BY_TEXT", PYSCR_SC_WRAPVISUALFLAGLOC_END_BY_TEXT)
		.value("START_BY_TEXT", PYSCR_SC_WRAPVISUALFLAGLOC_START_BY_TEXT);

	enum_<Keys>("KEYS")
		.value("DOWN", PYSCR_SCK_DOWN)
		.value("UP", PYSCR_SCK_UP)
		.value("LEFT", PYSCR_SCK_LEFT)
		.value("RIGHT", PYSCR_SCK_RIGHT)
		.value("HOME", PYSCR_SCK_HOME)
		.value("END", PYSCR_SCK_END)
		.value("PRIOR", PYSCR_SCK_PRIOR)
		.value("NEXT", PYSCR_SCK_NEXT)
		.value("DELETE", PYSCR_SCK_DELETE)
		.value("INSERT", PYSCR_SCK_INSERT)
		.value("ESCAPE", PYSCR_SCK_ESCAPE)
		.value("BACK", PYSCR_SCK_BACK)
		.value("TAB", PYSCR_SCK_TAB)
		.value("RETURN", PYSCR_SCK_RETURN)
		.value("ADD", PYSCR_SCK_ADD)
		.value("SUBTRACT", PYSCR_SCK_SUBTRACT)
		.value("DIVIDE", PYSCR_SCK_DIVIDE)
		.value("WIN", PYSCR_SCK_WIN)
		.value("RWIN", PYSCR_SCK_RWIN)
		.value("MENU", PYSCR_SCK_MENU);

	enum_<KeyMod>("KEYMOD")
		.value("NORM", PYSCR_SCMOD_NORM)
		.value("SHIFT", PYSCR_SCMOD_SHIFT)
		.value("CTRL", PYSCR_SCMOD_CTRL)
		.value("ALT", PYSCR_SCMOD_ALT)
		.value("SUPER", PYSCR_SCMOD_SUPER);

	enum_<AnnotationVisible>("ANNOTATIONVISIBLE")
		.value("HIDDEN", PYSCR_ANNOTATION_HIDDEN)
		.value("STANDARD", PYSCR_ANNOTATION_STANDARD)
		.value("BOXED", PYSCR_ANNOTATION_BOXED);

	enum_<CharacterSet>("CHARACTERSET")
		.value("ANSI", PYSCR_SC_CHARSET_ANSI)
		.value("DEFAULT", PYSCR_SC_CHARSET_DEFAULT)
		.value("BALTIC", PYSCR_SC_CHARSET_BALTIC)
		.value("CHINESEBIG5", PYSCR_SC_CHARSET_CHINESEBIG5)
		.value("EASTEUROPE", PYSCR_SC_CHARSET_EASTEUROPE)
		.value("GB2312", PYSCR_SC_CHARSET_GB2312)
		.value("GREEK", PYSCR_SC_CHARSET_GREEK)
		.value("HANGUL", PYSCR_SC_CHARSET_HANGUL)
		.value("MAC", PYSCR_SC_CHARSET_MAC)
		.value("OEM", PYSCR_SC_CHARSET_OEM)
		.value("RUSSIAN", PYSCR_SC_CHARSET_RUSSIAN)
		.value("CYRILLIC", PYSCR_SC_CHARSET_CYRILLIC)
		.value("SHIFTJIS", PYSCR_SC_CHARSET_SHIFTJIS)
		.value("SYMBOL", PYSCR_SC_CHARSET_SYMBOL)
		.value("TURKISH", PYSCR_SC_CHARSET_TURKISH)
		.value("JOHAB", PYSCR_SC_CHARSET_JOHAB)
		.value("HEBREW", PYSCR_SC_CHARSET_HEBREW)
		.value("ARABIC", PYSCR_SC_CHARSET_ARABIC)
		.value("VIETNAMESE", PYSCR_SC_CHARSET_VIETNAMESE)
		.value("THAI", PYSCR_SC_CHARSET_THAI)
		.value("8859_15", PYSCR_SC_CHARSET_8859_15);

	enum_<PrintOption>("PRINTOPTION")
		.value("NORMAL", PYSCR_SC_PRINT_NORMAL)
		.value("INVERTLIGHT", PYSCR_SC_PRINT_INVERTLIGHT)
		.value("BLACKONWHITE", PYSCR_SC_PRINT_BLACKONWHITE)
		.value("COLOURONWHITE", PYSCR_SC_PRINT_COLOURONWHITE)
		.value("COLOURONWHITEDEFAULTBG", PYSCR_SC_PRINT_COLOURONWHITEDEFAULTBG);

	enum_<MarkerSymbol>("MARKERSYMBOL")
		.value("CIRCLE", PYSCR_SC_MARK_CIRCLE)
		.value("ROUNDRECT", PYSCR_SC_MARK_ROUNDRECT)
		.value("ARROW", PYSCR_SC_MARK_ARROW)
		.value("SMALLRECT", PYSCR_SC_MARK_SMALLRECT)
		.value("SHORTARROW", PYSCR_SC_MARK_SHORTARROW)
		.value("EMPTY", PYSCR_SC_MARK_EMPTY)
		.value("ARROWDOWN", PYSCR_SC_MARK_ARROWDOWN)
		.value("MINUS", PYSCR_SC_MARK_MINUS)
		.value("PLUS", PYSCR_SC_MARK_PLUS)
		.value("VLINE", PYSCR_SC_MARK_VLINE)
		.value("LCORNER", PYSCR_SC_MARK_LCORNER)
		.value("TCORNER", PYSCR_SC_MARK_TCORNER)
		.value("BOXPLUS", PYSCR_SC_MARK_BOXPLUS)
		.value("BOXPLUSCONNECTED", PYSCR_SC_MARK_BOXPLUSCONNECTED)
		.value("BOXMINUS", PYSCR_SC_MARK_BOXMINUS)
		.value("BOXMINUSCONNECTED", PYSCR_SC_MARK_BOXMINUSCONNECTED)
		.value("LCORNERCURVE", PYSCR_SC_MARK_LCORNERCURVE)
		.value("TCORNERCURVE", PYSCR_SC_MARK_TCORNERCURVE)
		.value("CIRCLEPLUS", PYSCR_SC_MARK_CIRCLEPLUS)
		.value("CIRCLEPLUSCONNECTED", PYSCR_SC_MARK_CIRCLEPLUSCONNECTED)
		.value("CIRCLEMINUS", PYSCR_SC_MARK_CIRCLEMINUS)
		.value("CIRCLEMINUSCONNECTED", PYSCR_SC_MARK_CIRCLEMINUSCONNECTED)
		.value("BACKGROUND", PYSCR_SC_MARK_BACKGROUND)
		.value("DOTDOTDOT", PYSCR_SC_MARK_DOTDOTDOT)
		.value("ARROWS", PYSCR_SC_MARK_ARROWS)
		.value("PIXMAP", PYSCR_SC_MARK_PIXMAP)
		.value("FULLRECT", PYSCR_SC_MARK_FULLRECT)
		.value("LEFTRECT", PYSCR_SC_MARK_LEFTRECT)
		.value("AVAILABLE", PYSCR_SC_MARK_AVAILABLE)
		.value("UNDERLINE", PYSCR_SC_MARK_UNDERLINE)
		.value("CHARACTER", PYSCR_SC_MARK_CHARACTER);

	enum_<IndicatorStyle>("INDICATORSTYLE")
		.value("PLAIN", PYSCR_INDIC_PLAIN)
		.value("SQUIGGLE", PYSCR_INDIC_SQUIGGLE)
		.value("TT", PYSCR_INDIC_TT)
		.value("DIAGONAL", PYSCR_INDIC_DIAGONAL)
		.value("STRIKE", PYSCR_INDIC_STRIKE)
		.value("HIDDEN", PYSCR_INDIC_HIDDEN)
		.value("BOX", PYSCR_INDIC_BOX)
		.value("ROUNDBOX", PYSCR_INDIC_ROUNDBOX)
		.value("MAX", PYSCR_INDIC_MAX)
		.value("CONTAINER", PYSCR_INDIC_CONTAINER);

	enum_<WrapVisualFlag>("WRAPVISUALFLAG")
		.value("NONE", PYSCR_SC_WRAPVISUALFLAG_NONE)
		.value("END", PYSCR_SC_WRAPVISUALFLAG_END)
		.value("START", PYSCR_SC_WRAPVISUALFLAG_START);

	enum_<Lexer>("LEXER")
		.value("CONTAINER", PYSCR_SCLEX_CONTAINER)
		.value("NULL", PYSCR_SCLEX_NULL)
		.value("PYTHON", PYSCR_SCLEX_PYTHON)
		.value("CPP", PYSCR_SCLEX_CPP)
		.value("HTML", PYSCR_SCLEX_HTML)
		.value("XML", PYSCR_SCLEX_XML)
		.value("PERL", PYSCR_SCLEX_PERL)
		.value("SQL", PYSCR_SCLEX_SQL)
		.value("VB", PYSCR_SCLEX_VB)
		.value("PROPERTIES", PYSCR_SCLEX_PROPERTIES)
		.value("ERRORLIST", PYSCR_SCLEX_ERRORLIST)
		.value("MAKEFILE", PYSCR_SCLEX_MAKEFILE)
		.value("BATCH", PYSCR_SCLEX_BATCH)
		.value("XCODE", PYSCR_SCLEX_XCODE)
		.value("LATEX", PYSCR_SCLEX_LATEX)
		.value("LUA", PYSCR_SCLEX_LUA)
		.value("DIFF", PYSCR_SCLEX_DIFF)
		.value("CONF", PYSCR_SCLEX_CONF)
		.value("PASCAL", PYSCR_SCLEX_PASCAL)
		.value("AVE", PYSCR_SCLEX_AVE)
		.value("ADA", PYSCR_SCLEX_ADA)
		.value("LISP", PYSCR_SCLEX_LISP)
		.value("RUBY", PYSCR_SCLEX_RUBY)
		.value("EIFFEL", PYSCR_SCLEX_EIFFEL)
		.value("EIFFELKW", PYSCR_SCLEX_EIFFELKW)
		.value("TCL", PYSCR_SCLEX_TCL)
		.value("NNCRONTAB", PYSCR_SCLEX_NNCRONTAB)
		.value("BULLANT", PYSCR_SCLEX_BULLANT)
		.value("VBSCRIPT", PYSCR_SCLEX_VBSCRIPT)
		.value("BAAN", PYSCR_SCLEX_BAAN)
		.value("MATLAB", PYSCR_SCLEX_MATLAB)
		.value("SCRIPTOL", PYSCR_SCLEX_SCRIPTOL)
		.value("ASM", PYSCR_SCLEX_ASM)
		.value("CPPNOCASE", PYSCR_SCLEX_CPPNOCASE)
		.value("FORTRAN", PYSCR_SCLEX_FORTRAN)
		.value("F77", PYSCR_SCLEX_F77)
		.value("CSS", PYSCR_SCLEX_CSS)
		.value("POV", PYSCR_SCLEX_POV)
		.value("LOUT", PYSCR_SCLEX_LOUT)
		.value("ESCRIPT", PYSCR_SCLEX_ESCRIPT)
		.value("PS", PYSCR_SCLEX_PS)
		.value("NSIS", PYSCR_SCLEX_NSIS)
		.value("MMIXAL", PYSCR_SCLEX_MMIXAL)
		.value("CLW", PYSCR_SCLEX_CLW)
		.value("CLWNOCASE", PYSCR_SCLEX_CLWNOCASE)
		.value("LOT", PYSCR_SCLEX_LOT)
		.value("YAML", PYSCR_SCLEX_YAML)
		.value("TEX", PYSCR_SCLEX_TEX)
		.value("METAPOST", PYSCR_SCLEX_METAPOST)
		.value("POWERBASIC", PYSCR_SCLEX_POWERBASIC)
		.value("FORTH", PYSCR_SCLEX_FORTH)
		.value("ERLANG", PYSCR_SCLEX_ERLANG)
		.value("OCTAVE", PYSCR_SCLEX_OCTAVE)
		.value("MSSQL", PYSCR_SCLEX_MSSQL)
		.value("VERILOG", PYSCR_SCLEX_VERILOG)
		.value("KIX", PYSCR_SCLEX_KIX)
		.value("GUI4CLI", PYSCR_SCLEX_GUI4CLI)
		.value("SPECMAN", PYSCR_SCLEX_SPECMAN)
		.value("AU3", PYSCR_SCLEX_AU3)
		.value("APDL", PYSCR_SCLEX_APDL)
		.value("BASH", PYSCR_SCLEX_BASH)
		.value("ASN1", PYSCR_SCLEX_ASN1)
		.value("VHDL", PYSCR_SCLEX_VHDL)
		.value("CAML", PYSCR_SCLEX_CAML)
		.value("BLITZBASIC", PYSCR_SCLEX_BLITZBASIC)
		.value("PUREBASIC", PYSCR_SCLEX_PUREBASIC)
		.value("HASKELL", PYSCR_SCLEX_HASKELL)
		.value("PHPSCRIPT", PYSCR_SCLEX_PHPSCRIPT)
		.value("TADS3", PYSCR_SCLEX_TADS3)
		.value("REBOL", PYSCR_SCLEX_REBOL)
		.value("SMALLTALK", PYSCR_SCLEX_SMALLTALK)
		.value("FLAGSHIP", PYSCR_SCLEX_FLAGSHIP)
		.value("CSOUND", PYSCR_SCLEX_CSOUND)
		.value("FREEBASIC", PYSCR_SCLEX_FREEBASIC)
		.value("INNOSETUP", PYSCR_SCLEX_INNOSETUP)
		.value("OPAL", PYSCR_SCLEX_OPAL)
		.value("SPICE", PYSCR_SCLEX_SPICE)
		.value("D", PYSCR_SCLEX_D)
		.value("CMAKE", PYSCR_SCLEX_CMAKE)
		.value("GAP", PYSCR_SCLEX_GAP)
		.value("PLM", PYSCR_SCLEX_PLM)
		.value("PROGRESS", PYSCR_SCLEX_PROGRESS)
		.value("ABAQUS", PYSCR_SCLEX_ABAQUS)
		.value("ASYMPTOTE", PYSCR_SCLEX_ASYMPTOTE)
		.value("R", PYSCR_SCLEX_R)
		.value("MAGIK", PYSCR_SCLEX_MAGIK)
		.value("POWERSHELL", PYSCR_SCLEX_POWERSHELL)
		.value("MYSQL", PYSCR_SCLEX_MYSQL)
		.value("PO", PYSCR_SCLEX_PO)
		.value("TAL", PYSCR_SCLEX_TAL)
		.value("COBOL", PYSCR_SCLEX_COBOL)
		.value("TACL", PYSCR_SCLEX_TACL)
		.value("SORCUS", PYSCR_SCLEX_SORCUS)
		.value("POWERPRO", PYSCR_SCLEX_POWERPRO)
		.value("NIMROD", PYSCR_SCLEX_NIMROD)
		.value("SML", PYSCR_SCLEX_SML)
		.value("MARKDOWN", PYSCR_SCLEX_MARKDOWN)
		.value("AUTOMATIC", PYSCR_SCLEX_AUTOMATIC);

	enum_<CursorShape>("CURSORSHAPE")
		.value("NORMAL", PYSCR_SC_CURSORNORMAL)
		.value("WAIT", PYSCR_SC_CURSORWAIT);

	enum_<MarginType>("MARGINTYPE")
		.value("SYMBOL", PYSCR_SC_MARGIN_SYMBOL)
		.value("NUMBER", PYSCR_SC_MARGIN_NUMBER)
		.value("BACK", PYSCR_SC_MARGIN_BACK)
		.value("FORE", PYSCR_SC_MARGIN_FORE)
		.value("TEXT", PYSCR_SC_MARGIN_TEXT)
		.value("RTEXT", PYSCR_SC_MARGIN_RTEXT);

	enum_<FindOption>("FINDOPTION")
		.value("WHOLEWORD", PYSCR_SCFIND_WHOLEWORD)
		.value("MATCHCASE", PYSCR_SCFIND_MATCHCASE)
		.value("WORDSTART", PYSCR_SCFIND_WORDSTART)
		.value("REGEXP", PYSCR_SCFIND_REGEXP)
		.value("POSIX", PYSCR_SCFIND_POSIX);

	enum_<VirtualSpace>("VIRTUALSPACE")
		.value("NONE", PYSCR_SCVS_NONE)
		.value("RECTANGULARSELECTION", PYSCR_SCVS_RECTANGULARSELECTION)
		.value("USERACCESSIBLE", PYSCR_SCVS_USERACCESSIBLE);

	enum_<EdgeVisualStyle>("EDGEVISUALSTYLE")
		.value("NONE", PYSCR_EDGE_NONE)
		.value("LINE", PYSCR_EDGE_LINE)
		.value("BACKGROUND", PYSCR_EDGE_BACKGROUND);

	enum_<WhiteSpace>("WHITESPACE")
		.value("INVISIBLE", PYSCR_SCWS_INVISIBLE)
		.value("VISIBLEALWAYS", PYSCR_SCWS_VISIBLEALWAYS)
		.value("VISIBLEAFTERINDENT", PYSCR_SCWS_VISIBLEAFTERINDENT);

	enum_<MarkerOutline>("MARKEROUTLINE")
		.value("FOLDEREND", PYSCR_SC_MARKNUM_FOLDEREND)
		.value("FOLDEROPENMID", PYSCR_SC_MARKNUM_FOLDEROPENMID)
		.value("FOLDERMIDTAIL", PYSCR_SC_MARKNUM_FOLDERMIDTAIL)
		.value("FOLDERTAIL", PYSCR_SC_MARKNUM_FOLDERTAIL)
		.value("FOLDERSUB", PYSCR_SC_MARKNUM_FOLDERSUB)
		.value("FOLDER", PYSCR_SC_MARKNUM_FOLDER)
		.value("FOLDEROPEN", PYSCR_SC_MARKNUM_FOLDEROPEN);

	enum_<FoldLevel>("FOLDLEVEL")
		.value("BASE", PYSCR_SC_FOLDLEVELBASE)
		.value("WHITEFLAG", PYSCR_SC_FOLDLEVELWHITEFLAG)
		.value("HEADERFLAG", PYSCR_SC_FOLDLEVELHEADERFLAG)
		.value("NUMBERMASK", PYSCR_SC_FOLDLEVELNUMBERMASK);

	enum_<WrapIndentMode>("WRAPINDENTMODE")
		.value("FIXED", PYSCR_SC_WRAPINDENT_FIXED)
		.value("SAME", PYSCR_SC_WRAPINDENT_SAME)
		.value("INDENT", PYSCR_SC_WRAPINDENT_INDENT);

	enum_<LineCache>("LINECACHE")
		.value("NONE", PYSCR_SC_CACHE_NONE)
		.value("CARET", PYSCR_SC_CACHE_CARET)
		.value("PAGE", PYSCR_SC_CACHE_PAGE)
		.value("DOCUMENT", PYSCR_SC_CACHE_DOCUMENT);

	enum_<MultiPaste>("MULTIPASTE")
		.value("ONCE", PYSCR_SC_MULTIPASTE_ONCE)
		.value("EACH", PYSCR_SC_MULTIPASTE_EACH);

	enum_<StylesCommon>("STYLESCOMMON")
		.value("DEFAULT", PYSCR_STYLE_DEFAULT)
		.value("LINENUMBER", PYSCR_STYLE_LINENUMBER)
		.value("BRACELIGHT", PYSCR_STYLE_BRACELIGHT)
		.value("BRACEBAD", PYSCR_STYLE_BRACEBAD)
		.value("CONTROLCHAR", PYSCR_STYLE_CONTROLCHAR)
		.value("INDENTGUIDE", PYSCR_STYLE_INDENTGUIDE)
		.value("CALLTIP", PYSCR_STYLE_CALLTIP)
		.value("LASTPREDEFINED", PYSCR_STYLE_LASTPREDEFINED)
		.value("MAX", PYSCR_STYLE_MAX);

	enum_<IndentView>("INDENTVIEW")
		.value("NONE", PYSCR_SC_IV_NONE)
		.value("REAL", PYSCR_SC_IV_REAL)
		.value("LOOKFORWARD", PYSCR_SC_IV_LOOKFORWARD)
		.value("LOOKBOTH", PYSCR_SC_IV_LOOKBOTH);

	enum_<Wrap>("WRAP")
		.value("NONE", PYSCR_SC_WRAP_NONE)
		.value("WORD", PYSCR_SC_WRAP_WORD)
		.value("CHAR", PYSCR_SC_WRAP_CHAR);

	enum_<SelectionMode>("SELECTIONMODE")
		.value("STREAM", PYSCR_SC_SEL_STREAM)
		.value("RECTANGLE", PYSCR_SC_SEL_RECTANGLE)
		.value("LINES", PYSCR_SC_SEL_LINES)
		.value("THIN", PYSCR_SC_SEL_THIN);

	enum_<FontQuality>("FONTQUALITY")
		.value("QUALITY_MASK", PYSCR_SC_EFF_QUALITY_MASK)
		.value("QUALITY_DEFAULT", PYSCR_SC_EFF_QUALITY_DEFAULT)
		.value("QUALITY_NON_ANTIALIASED", PYSCR_SC_EFF_QUALITY_NON_ANTIALIASED)
		.value("QUALITY_ANTIALIASED", PYSCR_SC_EFF_QUALITY_ANTIALIASED)
		.value("QUALITY_LCD_OPTIMIZED", PYSCR_SC_EFF_QUALITY_LCD_OPTIMIZED);

	enum_<EndOfLine>("ENDOFLINE")
		.value("CRLF", PYSCR_SC_EOL_CRLF)
		.value("CR", PYSCR_SC_EOL_CR)
		.value("LF", PYSCR_SC_EOL_LF);

	/* --Autogenerated --------------------------------------------*/
}